1 : socket本身没有提供重连机制，websocket也是一样。所以重连是自己做的

2:  要实现websocket重连机制，首先要分析websocket的工作环境。socket的接收和发送都是阻塞线程的，
    所以websocket一般都是用两个线程分别去负责接收和发送消息。这里就以接收和发送都是异步为前提实现重连。
    socket 宏观的链接步骤为：connect----connected  异步。
    socket 宏观的断开链接步骤为：disconnect----disconnected  异步

3:  心跳检测，断网检测
3-1  https://blog.csdn.net/u011423258/article/details/82764164
3-2  websocket的基本事件有onopen、onmessage、onerror、onclose这四个事件，
     onopen是连接已打开，且可以通信，onmessage是收到消息，onerror是websocket发生错误，onclose是websocket连接关闭。在这以上的四个事件中，我们做各种事件处理。

3-3  webSocket其实已经断开，客户端怎么检测出来？---心跳检测
     第一，心跳检测包由客户端（浏览器）定时向服务端（后端）发送约定好的消息格式，告诉服务端客户端在线，服务端收到消息后立即返回一个消息，
     告诉客户端长连接没问题，可以正常使用。

     第二，心跳检测也可以用来检测后端是否正常，如果在连接正常的情况下，服务端并未能在设定的时间内返回特定消息，说明可能当前后端异常，
     当前连接不可用，客户端可以尝试重新建立websocket连接来重试

3-4  实现心跳检测
     实现心跳检测的方法思路算是比较简单，主要是通过定时向服务器send()相关消息，并且定下心跳包的超时时间，
     当收到服务器返回的消息时，清掉当前心跳计时器以及重连超时的定时器。若服务端未能够及时返回特定消息，超过设定的超时时间时，
     主动关闭当前websocket连接，并且尝试重新建立新的websocket连接。

3-5  实现心跳检测暴力点
     直接在连接webSocket之后，直接按照一定的频率发起重连